apiVersion: apps/v1
kind: Deployment 
metadata: 
  name: nginx-deployment 
  labels: 
    app: myapp
spec:
  replicas: 3
  selector: 
    matchLabels: 
      app: myapp
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 2
    type: RollingUpdate          
  template:
    metadata: 
      labels:
        app: myapp
    spec:
      securityContext: 
        runAsUser: 1001
      containers:
        - name: nginx
          image: nginx:latest
          ports:  
          - containerPort: 80
          readinessProbe:
            httpGet:
              port: 80
              path: /etc/httpd/conf/httpd.conf
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            httpGet: 
              port: 80
              path: /etc/httpd/conf/httpd.conf
            initialDelaySeconds: 15
            periodSeconds: 10
          startupProbe:
            httpGet: 
              port: 80
              path: /etc/httpd/conf/httpd.conf
            failureThreshold: 30
            periodSeconds: 10
          resources:
            requests:
              memory: 100Mi
              cpu: 10Mi
            limits:
              memory: 100Mi
              cpu: 10Mi
          volumeMounts:
          - name: nginx-volume 
            mountPath: /var/www
      volumes:
      - name: nginx-volume
        emptyDir: {}  
---
apiVersion: v1 
kind: Service
metadata:
  name: nginx-service
  labels:
    app: myapp
spec:
  selector: 
    app: myapp                         
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30002
